(ns kosmos.server-test
  (:require [clojure.test :refer :all]
            [next.jdbc :as jdbc]
            [next.jdbc.sql :as sql]
            [kosmos :refer [start! stop! map->system system]]))

(def config {
             :server
             {
              :kosmos/init :kosmos.server/HsqlDbServerComponent
              :port        "9005"
              :database    "file:target/db/test"
              :dbname      "test"
              }

             :db
             {
              :dbtype "hsqldb"
              :dbname "hsql://localhost:9005/test"
              :user "SA"
              :password ""
              }
             })


(defn setup-db-server [f]
  (start! (map->system config))
  (f)
  (stop!))

(use-fixtures :once setup-db-server)

(defn inserted? [returned]
  (:TEST/ID returned))

(deftest server-started
  (let [db (:db system)]
    (is (= [{:next.jdbc/update-count 0}]
           (jdbc/execute! db ["drop table test if exists"])))
    (is (= [{:next.jdbc/update-count 0}]
           (jdbc/execute! db [(str "create table test ("
                                   " id bigint generated by default as identity (start with 1001),"
                                   " name varchar(255) not null,"
                                   " description varchar(255),"
                                   " primary key (id)"
                                   " )")])))
    (is (inserted? (sql/insert! db :test {:name "test-01" :description "a test record one"})))
    (is (inserted? (sql/insert! db :test {:name "test-02" :description "a test record two"})))
    (is (inserted? (sql/insert! db :test {:name "test-03" :description "a test record three"})))
    (is (inserted? (sql/insert! db :test {:name "test-04" :description "a test record four"})))))
